/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package app;

import bd.DAO;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import model.Correo;
import model.Usuario;

/**
 *
 * @author Javier
 */
public class CambioClave extends javax.swing.JFrame {

    DAO oDao;
    String volver;

    /**
     * Creates new form CambioClave
     *
     * @param rutString
     */
    public CambioClave(String rutString) {
        volver = rutString;
        initComponents();
        setTitle("BancoFunaoApp");
        this.setLocationRelativeTo(null);

    }

    private CambioClave() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelCambio = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        lblC_Nueva = new javax.swing.JLabel();
        lblConfirmar = new javax.swing.JLabel();
        txtC_Nueva = new javax.swing.JPasswordField();
        txtN_Confirmar = new javax.swing.JPasswordField();
        btnContinuar = new javax.swing.JButton();
        lblClaveActual = new javax.swing.JLabel();
        txtClaveActual = new javax.swing.JPasswordField();
        btnVolver = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelCambio.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Times New Roman", 2, 18)); // NOI18N
        jLabel3.setText("Cambio de clave");
        panelCambio.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 10, -1, -1));

        lblC_Nueva.setText("Nueva Clave:");
        panelCambio.add(lblC_Nueva, new org.netbeans.lib.awtextra.AbsoluteConstraints(29, 85, -1, -1));

        lblConfirmar.setText("Conformar Clave:");
        panelCambio.add(lblConfirmar, new org.netbeans.lib.awtextra.AbsoluteConstraints(29, 126, -1, -1));

        txtC_Nueva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtC_NuevaActionPerformed(evt);
            }
        });
        panelCambio.add(txtC_Nueva, new org.netbeans.lib.awtextra.AbsoluteConstraints(132, 85, 156, -1));
        panelCambio.add(txtN_Confirmar, new org.netbeans.lib.awtextra.AbsoluteConstraints(132, 123, 155, -1));

        btnContinuar.setText("Continuar");
        btnContinuar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnContinuarActionPerformed(evt);
            }
        });
        panelCambio.add(btnContinuar, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 170, -1, -1));

        lblClaveActual.setText("Clave Actual:");
        panelCambio.add(lblClaveActual, new org.netbeans.lib.awtextra.AbsoluteConstraints(29, 50, -1, -1));
        panelCambio.add(txtClaveActual, new org.netbeans.lib.awtextra.AbsoluteConstraints(132, 47, 156, -1));

        btnVolver.setText("Volver");
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });
        panelCambio.add(btnVolver, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 170, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Cu√°les-son-los-colores-pasteles-300x300 (1).jpg"))); // NOI18N
        jLabel2.setText("jLabel2");
        panelCambio.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 450, 220));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelCambio, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelCambio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnContinuarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnContinuarActionPerformed
        try {
            // TODO add your handling code here:
            oDao = new DAO();
            Usuario oUsuario = oDao.getUserRegisted(volver);
            if (txtClaveActual.getText().equalsIgnoreCase(oUsuario.getClave())) {
                if (txtClaveActual.getText().equalsIgnoreCase(txtC_Nueva.getText()) && txtC_Nueva.getText().equalsIgnoreCase(txtN_Confirmar.getText())) {
                    JOptionPane.showMessageDialog(rootPane, "La nueva clave no puede ser igual a la antigua");
                    txtClaveActual.setText("");
                    txtC_Nueva.setText("");
                    txtN_Confirmar.setText("");
                    txtC_Nueva.requestFocus();
                } else if (txtC_Nueva.getText().trim().isEmpty() && txtN_Confirmar.getText().trim().isEmpty()) {
                    JOptionPane.showMessageDialog(rootPane, "Los campos no pueden estar vacios");
                    txtC_Nueva.requestFocus();
                } else if (txtC_Nueva.getText().equalsIgnoreCase(txtN_Confirmar.getText())) {
                    cambiarClave(txtN_Confirmar.getText(), volver);
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Lac claves no coinciden");
                    txtClaveActual.setText("");
                    txtC_Nueva.setText("");
                    txtN_Confirmar.setText("");
                    txtC_Nueva.requestFocus();
                }
                /*if (txtC_Nueva.getText().equalsIgnoreCase(txtN_Confirmar.getText())) {
                    cambiarClave(txtN_Confirmar.getText(), volver);
                } else if (txtClaveActual.getText().equalsIgnoreCase(txtC_Nueva.getText())) {
                    JOptionPane.showMessageDialog(rootPane, "La nueva clave no puede ser igual a la antigua");
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Lac claves no coinciden");
                }*/
            } else if (txtClaveActual.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(rootPane, "Error, campo vacio");
                txtClaveActual.requestFocus();
            } else {
                JOptionPane.showMessageDialog(rootPane, "Clave incorrecta");
                txtClaveActual.setText("");
                txtClaveActual.requestFocus();
            }

        } catch (SQLException ex) {
            Logger.getLogger(CambioClave.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_btnContinuarActionPerformed

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        // TODO add your handling code here:
        PantallaP oPantallaP = new PantallaP(volver);
        oPantallaP.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnVolverActionPerformed

    private void txtC_NuevaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtC_NuevaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtC_NuevaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CambioClave.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CambioClave.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CambioClave.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CambioClave.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new CambioClave().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnContinuar;
    private javax.swing.JButton btnVolver;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel lblC_Nueva;
    private javax.swing.JLabel lblClaveActual;
    private javax.swing.JLabel lblConfirmar;
    private javax.swing.JPanel panelCambio;
    private javax.swing.JPasswordField txtC_Nueva;
    private javax.swing.JPasswordField txtClaveActual;
    private javax.swing.JPasswordField txtN_Confirmar;
    // End of variables declaration//GEN-END:variables

    private void cambiarClave(String nclave, String rv) {
        try {
            oDao = new DAO();
            Usuario oUsuario = oDao.getUserRegisted(rv);
            if (oUsuario != null) {
                oDao.cambiarClave(nclave, oUsuario.getN_cuenta());
                JOptionPane.showMessageDialog(rootPane, "Clave cambiada exitosamente,\n "
                        + "se solicitara en su proximo inicio de sesi√≤n");
                Correo oCorreo = new Correo();
                oCorreo.enviarCorreo(oUsuario.getCorreo(), "Cambio de Clave Secreta",
                        "Estimado/a " + oUsuario.getNombre() + ", su cambio de clave "
                        + "secreta se ha realizado exitosamente, su nueva clave es: " + nclave);
                txtC_Nueva.setText("");
                txtN_Confirmar.setText("");
                Login oLogin=new Login();
                oLogin.setVisible(true);
                this.dispose();
            }
        } catch (SQLException ex) {
            Logger.getLogger(CambioClave.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    /*
    private void cambiarClave(String cActual, String nClave,String rutvolver){
        try {
            oDao=new DAO();
            DAO oDao2=new DAO();
            System.out.println(cActual);
            Usuario oUsuario=oDao.getUserRegisted(rutvolver);
            System.out.println(rutvolver);
            if (oUsuario!=null) {
                System.out.println(cActual);
                if (nClave.equalsIgnoreCase(oUsuario.getClave())) {
                    oDao2.cambiarClave(nClave, oUsuario.getN_cuenta());
                    JOptionPane.showMessageDialog(rootPane, "Se ha cambiado la clave");
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(CambioClave.class.getName()).log(Level.SEVERE, null, ex);
        }
    }*/
}
